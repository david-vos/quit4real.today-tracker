name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  issues: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Rename example config
        run: mv config/.example.config.go config/config.go

      - name: Build
        run: go build

      - name: Run Tests
        id: run_tests
        run: |
          go test ./... | tee result.log
          if grep -q "FAIL" result.log; then
            echo "failed=true" >> $GITHUB_OUTPUT
            echo "log<<EOF" >> $GITHUB_OUTPUT
            cat result.log >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "failed=false" >> $GITHUB_OUTPUT
          fi

      - name: Update PR with test results
        if: steps.run_tests.outputs.failed == 'true'
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          
          # Use jq to properly escape the test log for JSON
          BODY_JSON=$(jq -n --arg log "${{ steps.run_tests.outputs.log }}" '{"body": "Tests failed:\n```\n" + $log + "\n```"}')
          
          curl -X PATCH \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/json" \
            -d "$BODY_JSON" \
            "https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER"